@model Ryan_BugTracker.Models.Ticket

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Ticket</h2>
<hr />
<strong>Project: </strong>@Html.DisplayFor(model => model.Project.Title)

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
   
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.AssignedToUserId)


        @if (User.IsInRole("Administrator") || User.IsInRole("Project Manager"))
        {                 
        <div class="form-group">
            <div class="control-label col-md-2">
                <strong>Ticket Name</strong>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                <strong>Description</strong>
            </div>
            <div class="col-md-10">
                <textarea id="Body" class="form-control" name="Body" required data-validation-required-message="This field can't be left blank" rows="3">@Model.Body</textarea>
                @*@Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                <strong>Project</strong>
            </div>
            <div class="col-md-10">
                @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>
        }

        else
        {
            @Html.HiddenFor(model => model.Title)
            @Html.HiddenFor(model => model.Body)
            @Html.HiddenFor(model => model.ProjectId)

            <div class="form-group">
                <div class="control-label col-md-2">
                    <strong>Ticket Name</strong>
                </div>
                <div class="col-md-10" style="padding-top: 9px">
                    @Html.DisplayFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">
                    <strong>Description</strong>
                </div>
                <div class="col-md-10" style="padding-top: 9px">                  
                    @Html.DisplayFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">
                    <strong>Project</strong>
                </div>
                <div class="col-md-10" style="padding-top: 9px">
                    @Html.DisplayFor(model => model.Project.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                </div>
            </div>
        }      
       
        <div class="form-group">
            <div class="control-label col-md-2">
                <strong>Type</strong>
            </div>
            <div class="col-md-10">
                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                <strong>Priority</strong>
            </div>
            <div class="col-md-10">
                @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                <strong>Status</strong>
            </div>
            <div class="col-md-10">
                @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Home")
</div>
