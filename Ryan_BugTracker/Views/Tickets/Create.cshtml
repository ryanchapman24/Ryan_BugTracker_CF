@model Ryan_BugTracker.Models.Ticket

@{
    ViewBag.Title = "Create";
}

<h2>Create Ticket</h2>
<hr />
<strong>Project: </strong>@ViewBag.ProjectName

@using (Html.BeginForm("Create", "Tickets", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.ProjectId)
    
    <div class="form-horizontal">
        <hr />
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="control-label col-md-2">
                <strong>Ticket Name</strong>
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                <strong>Description</strong>
            </div>
            <div class="col-md-10">
                <textarea id="Body" class="form-control" name="Body" required data-validation-required-message="This field can't be left blank" rows="3"></textarea>
                @*@Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.AuthorUserId, "AuthorUserId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AuthorUserId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AuthorUserId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.AssignedToUserId, "AssignedToUserId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AssignedToUserId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            <div class="control-label col-md-2">
                <strong>Project</strong>
            </div>
            <div class="col-md-10">
                @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="control-label col-md-2">
                <strong>Type</strong>
            </div>
            <div class="col-md-10">
                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                <strong>Priority</strong>
            </div>
            <div class="col-md-10">
                @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.TicketStatusId, "TicketStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
            </div>
        </div>*@
       
        <!--Create Attachments-->        
           
        <div class="col-md-offset-2">
            <div class="form-group">                
                <input style="" type="file" name="files" id="files" multiple />
            </div>            
        </div>
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Home")
</div>
